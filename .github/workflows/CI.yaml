name: CI/CD Helm Chart + Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # 1. Clonar el repositorio de la app
      - name: Checkout application repository
        uses: actions/checkout@v3

      # 2. Configurar Node.js (si tu app lo requiere)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3. Build y push de la imagen Docker
      - name: Build and push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: andrea233/delivery-system
          tags: ${{ github.sha }}
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Clonar el repositorio de Helm Charts
      - name: Checkout Helm chart repository
        uses: actions/checkout@v3
        with:
          repository: AndreSosa21/chartsHelm-delivery-app
          path: helm-repo

      # 5. Debug: mostrar estructura del repo del chart
      - name: Debug - List files
        run: ls -R helm-repo

      # 6. Empaquetar Helm Chart
      - name: Package Helm chart
        run: |
          mkdir -p helm-packages
          helm package helm-repo/delivery-app/delivery-app --destination helm-packages

      # 7. Actualizar index.yaml
      - name: Update Helm repo index
        run: |
          helm repo index helm-packages --url https://andresosa21.github.io/chartsHelm-delivery-app/ \
            --merge helm-repo/index.yaml

      # 8. Subir charts al repo de GitHub Pages usando PAT
      - name: Deploy Helm chart to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.HELM_CHARTS_PAT }}  # <-- Usa el PAT aquÃ­
          publish_dir: ./helm-packages
          publish_branch: gh-pages
          force_orphan: true
          allow_empty_commit: true
          enable_jekyll: false