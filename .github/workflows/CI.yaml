name: CI/CD Helm Chart + Docker + Auto-version

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # 1. Clonar repositorio de la app
      - name: Checkout application repository
        uses: actions/checkout@v3

      # 2. Configurar Node.js si tu app lo requiere
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3. Build y push de la imagen Docker
      - name: Build and push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: andrea233/delivery-system
          tags: ${{ github.sha }}
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Clonar repositorio de Helm Repo (index.yaml + .tgz)
      - name: Checkout Helm repo
        uses: actions/checkout@v3
        with:
          repository: AndreSosa21/helm_delivery-app
          path: helm-repo

      # 5. Instalar yq para editar YAML
      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          yq --version

      # 6. Actualizar values.yaml con la nueva imagen
      - name: Update Helm chart image
        run: |
          yq eval ".app.image.tag = \"${GITHUB_SHA}\"" -i helm-repo/delivery-app/delivery-app/values.yaml

      # 7. Incrementar versión del chart automáticamente
      - name: Bump Chart version
        run: |
          CHART_PATH=helm-repo/delivery-app/delivery-app
          VERSION=$(yq eval '.version' $CHART_PATH/Chart.yaml)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          yq eval ".version = \"$NEW_VERSION\"" -i $CHART_PATH/Chart.yaml
          yq eval ".appVersion = \"$GITHUB_SHA\"" -i $CHART_PATH/Chart.yaml
          echo "New chart version: $NEW_VERSION"

      # 8. Empaquetar Helm chart (a carpeta _dist temporal)
      - name: Package Helm chart
        run: |
          mkdir -p helm-repo/_dist
          helm package helm-repo/delivery-app/delivery-app --destination helm-repo/_dist

      # 9. Actualizar index.yaml en la raíz del repo Helm
      - name: Update Helm repo index
        run: |
          helm repo index helm-repo/_dist \
            --url https://andresosa21.github.io/helm_delivery-app/ \
            --merge helm-repo/index.yaml

      # 10. Subir charts al repo Helm (gh-pages branch)
      - name: Deploy Helm chart to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.HELM_CHARTS_PAT }}
          publish_dir: ./helm-repo/_dist
          publish_branch: gh-pages
          force_orphan: true
          allow_empty_commit: false
          enable_jekyll: false
